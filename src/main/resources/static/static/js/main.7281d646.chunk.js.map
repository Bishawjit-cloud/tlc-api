{"version":3,"sources":["component/photo/license_image.jpg","component/photo/taxi_image.jpg","component/photo/nyc_taxi.png","component/Home.js","component/service/TlcApi.js","component/DriverInfo.js","component/VehicleInfo.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Home","plateNumber","setPlateNumber","useState","licenseNumber","setLicenseNumber","navigate","useNavigate","React","createElement","Container","fluid","Card","className","Body","Title","Text","Row","Col","md","Image","src","taxiImage","alt","rounded","style","height","objectFit","marginBottom","Form","width","onSubmit","handleVehicleData","Group","controlId","Control","type","required","placeholder","value","onChange","e","target","Button","variant","licenseImage","marginLeft","handleLicenseNumber","TlcApi","axios","get","API_BASE_URL","data","error","console","DriverInfo","useParams","driverData","setDriverData","setError","loading","setLoading","useEffect","async","fetchDriverData","setTimeout","err","padding","Spinner","animation","role","Alert","Object","keys","length","name","license_number","expiration_date","wheelchair_accessible_trained","last_date_updated","last_time_updated","VehicleInfo","vehicleData","setVehicleData","fetchVehicleData","log","active","vehicle_license_number","license_type","permit_license_number","dmv_license_plate_number","vehicle_vin_number","wheelchair_accessible","vehicle_year","base_number","base_name","base_type","veh","base_telephone_number","base_address","reason","App","display","flexDirection","minHeight","flex","Routes","Route","path","element","backgroundColor","nycLogo","maxHeight","Date","getFullYear","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","Router"],"mappings":"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","file":"static/js/main.7281d646.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/license_image.2dab2fa8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/taxi_image.508f07fe.jpg\";","module.exports = __webpack_public_path__ + \"static/media/nyc_taxi.732ebdce.png\";","// src/components/Home.js\n\nimport React,{ useState } from 'react';\nimport { Container,Row,Col,Image,Card,Form,Button } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport licenseImage from './photo/license_image.jpg';\nimport taxiImage from './photo/taxi_image.jpg';\n\nconst Home = () => {\n  const [plateNumber,setPlateNumber] = useState('');\n  const [licenseNumber,setLicenseNumber] = useState('');\n  const navigate = useNavigate();\n\n  const handleVehicleData = () => {\n    if (plateNumber) {\n      navigate('/vehicle-status/' + plateNumber);\n    }\n  };\n\n  const handleLicenseNumber = () => {\n    if (licenseNumber) {\n      navigate('/driver-info/' + licenseNumber);\n    }\n  };\n\n  return (\n    <Container fluid>\n      <Card className=\"text-center mb-4\">\n        <Card.Body>\n          <Card.Title>Check Your TLC License Status and FHV Information</Card.Title>\n          <Card.Text>\n            Discover comprehensive information about NYC's taxi and limousine services.\n            Here, you'll find resources, images, and updates related to the commission.\n          </Card.Text>\n        </Card.Body>\n      </Card>\n\n      <Row className=\"text-center\">\n        <Col md={6} className=\"mb-4 d-flex flex-column align-items-center\">\n          <Image\n            src={taxiImage}\n            alt=\"NYC Taxi\"\n            fluid\n            rounded\n            style={{ height: '300px',objectFit: 'cover',marginBottom: '1rem' }}\n          />\n          <h3>NYC Yellow Taxi</h3>\n          <Form className=\"mt-3\" style={{ width: '100%' }} onSubmit={handleVehicleData}>\n            <Form.Group controlId=\"taxiLicenseInput\">\n              <Form.Control\n                type=\"text\"\n                required\n                placeholder=\"Enter Vehicle Plate Number\"\n                value={plateNumber}\n                onChange={(e) => setPlateNumber(e.target.value)}\n              />\n            </Form.Group>\n            <Button type=\"submit\" variant=\"primary\" className=\"mt-2\" >Check Status</Button>\n          </Form>\n        </Col>\n\n        <Col md={6} className=\"mb-4 d-flex flex-column align-items-end\">\n          <Image\n            src={licenseImage}\n            alt=\"NYC Limousine\"\n            fluid\n            rounded\n            style={{ height: '300px',objectFit: 'cover',marginBottom: '1rem',marginLeft: '-10px' }}\n          />\n          <h3>NYC TLC License</h3>\n          <Form className=\"mt-3\" style={{ width: '100%' }} onSubmit={handleLicenseNumber}>\n            <Form.Group controlId=\"limousineLicenseInput\">\n              <Form.Control\n                type=\"text\"\n                required\n                placeholder=\"Enter Taxi License Number\"\n                value={licenseNumber}\n                onChange={(e) => setLicenseNumber(e.target.value)}\n              />\n            </Form.Group>\n            <Button type=\"submit\" variant=\"primary\" className=\"mt-2\" >Get Info</Button>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst API_BASE_URL = 'http://localhost:8080/api/v1/tlc/';\n\nclass TlcApi {\n    // Fetch driver data by license number\n    static async fetchDriverData(licenseNumber) {\n        try {\n            const response = await axios.get(API_BASE_URL + 'license-status/' + licenseNumber);\n            return response.data; // Returns the DriverResponse data\n        } catch (error) {\n            console.error('Error fetching driver data:', error);\n            throw error; // Rethrow the error to handle it in the component\n        }\n    }\n\n    // Fetch vehicle data by plate number\n    static async fetchVehicleData(plateNumber) {\n        try {\n            const response = await axios.get(API_BASE_URL + 'plate-number/' + plateNumber);\n            return response.data; // Returns the VehicleInfoResponse data\n        } catch (error) {\n            console.error('Error fetching vehicle data:', error);\n            throw error; // Rethrow the error to handle it in the component\n        }\n    }\n}\n\nexport default TlcApi;\n","// src/components/DriverInfo.js\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport TlcApi from './service/TlcApi';\nimport { Card, Spinner, Alert } from 'react-bootstrap';\n\nconst DriverInfo = () => {\n    const { licenseNumber } = useParams(); // Get the licenseNumber from the URL\n    const [driverData, setDriverData] = useState(null);\n    const [error, setError] = useState('');\n    const [loading, setLoading] = useState(true); // Set loading to true initially\n\n    useEffect(() => {\n        const fetchDriverData = async () => {\n            try {\n                const data = await TlcApi.fetchDriverData(licenseNumber);\n                // Simulate a delay of 1 second for loading effect\n                setTimeout(() => {\n                    setDriverData(data);\n                    setLoading(false); // Set loading to false after data is fetched\n                }, 1000);\n            } catch (err) {\n                setError('Error fetching data. Please try again.');\n                setLoading(false); // Ensure loading is false if there's an error\n            }\n        };\n\n        if (licenseNumber) {\n            fetchDriverData();\n        }\n    }, [licenseNumber]);\n\n    return (\n        <div style={{ padding: '20px' }}>\n            <h1>Driver Information</h1>\n            {loading ? (\n                <div className=\"text-center\">\n                    <Spinner animation=\"border\" role=\"status\" variant=\"primary\" style={{ width: '3rem', height: '3rem' }}>\n                        <span className=\"visually-hidden\">Loading...</span>\n                    </Spinner>\n                    <h2 className=\"mt-3\">Loading information for TLC License Number: <strong>{licenseNumber}</strong></h2>\n                </div>\n            ) : error ? (\n                <Alert variant=\"danger\">{error}</Alert>\n            ) : !driverData || Object.keys(driverData).length === 0 ? (\n                // Updated the error message here to reflect \"No driver information found\" for the license number\n                <Alert variant=\"warning\">\n                    No driver information found for license number: <strong>{licenseNumber}</strong>\n                </Alert>\n            ) : (\n                <Card style={{ padding: '20px' }}>\n                    <Card.Title>Driver Details</Card.Title>\n                    <Card.Body>\n                        <ul>\n                            <li><strong>Name:</strong> {driverData.name}</li>\n                            <li><strong>License Number:</strong> {driverData.license_number}</li>\n                            <li><strong>Type:</strong> {driverData.type}</li>\n                            <li><strong>Expiration Date:</strong> {driverData.expiration_date}</li>\n                            <li><strong>Wheelchair Accessible Trained:</strong> {driverData.wheelchair_accessible_trained}</li>\n                            <li><strong>Last Date Updated:</strong> {driverData.last_date_updated}</li>\n                            <li><strong>Last Time Updated:</strong> {driverData.last_time_updated}</li>\n                        </ul>\n                    </Card.Body>\n                </Card>\n            )}\n        </div>\n    );\n};\n\nexport default DriverInfo;\n","// src/components/VehicleInfo.js\nimport React,{ useEffect,useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport TlcApi from './service/TlcApi';  // Import the API for fetching data\nimport { Card,Spinner,Alert } from 'react-bootstrap';\n\nconst VehicleInfo = () => {\n    const { plateNumber } = useParams(); // Get plateNumber from the URL params\n    const [vehicleData,setVehicleData] = useState(null);\n    const [error,setError] = useState('');\n    const [loading,setLoading] = useState(true); // Set loading to true initially\n\n    useEffect(() => {\n        const fetchVehicleData = async () => {\n            try {\n                const data = await TlcApi.fetchVehicleData(plateNumber); // Fetch data using plateNumber\n                console.log('Fetched Vehicle Data:',data);\n                setTimeout(() => {\n                    setVehicleData(data);\n                    setLoading(false);\n                },1000); // Log the response to debug\n            } catch (err) {\n                console.error('Error fetching vehicle data:',err); // Log the error\n                setError('Error fetching data. Please try again.');\n                setLoading(false); // Ensure loading is false if there's an error\n            }\n        };\n\n        if (plateNumber) {\n            fetchVehicleData();\n        }\n    },[plateNumber]);\n\n    return (\n        <div style={{ padding: '20px' }}>\n            <h1>Vehicle Information</h1>\n            {loading ? (\n                <div className=\"text-center\">\n                    <Spinner animation=\"border\" role=\"status\" variant=\"primary\" style={{ width: '3rem',height: '3rem' }}>\n                        <span className=\"visually-hidden\">Loading...</span>\n                    </Spinner>\n                    <h2 className=\"mt-3\">Loading information for Plate Number: <strong>{plateNumber}</strong></h2>\n                </div>\n            ) : error ? (\n                <Alert variant=\"danger\">{error}</Alert>\n            ) : !vehicleData || Object.keys(vehicleData).length === 0 ? (\n                <Alert variant=\"warning\">\n                    No vehicle information found for plate number: <strong>{plateNumber}</strong>\n                </Alert>\n            ) : (\n                <Card style={{ padding: '20px' }}>\n                    <Card.Title>Vehicle Details</Card.Title>\n                    <Card.Body>\n                        <ul>\n                            <li><strong>Active:</strong> {vehicleData.active}</li>\n                            <li><strong>Vehicle License Number:</strong> {vehicleData.vehicle_license_number}</li>\n                            <li><strong>Name:</strong> {vehicleData.name}</li>\n                            <li><strong>License Type:</strong> {vehicleData.license_type}</li>\n                            <li><strong>Expiration Date:</strong> {vehicleData.expiration_date}</li>\n                            <li><strong>Permit License Number:</strong> {vehicleData.permit_license_number}</li>\n                            <li><strong>DMV License Plate Number:</strong> {vehicleData.dmv_license_plate_number}</li>\n                            <li><strong>Vehicle VIN Number:</strong> {vehicleData.vehicle_vin_number}</li>\n                            <li><strong>Wheelchair Accessible:</strong> {vehicleData.wheelchair_accessible}</li>\n                            <li><strong>Vehicle Year:</strong> {vehicleData.vehicle_year}</li>\n                            <li><strong>Base Number:</strong> {vehicleData.base_number}</li>\n                            <li><strong>Base Name:</strong> {vehicleData.base_name}</li>\n                            <li><strong>Base Type:</strong> {vehicleData.base_type}</li>\n                            <li><strong>Veh:</strong> {vehicleData.veh}</li>\n                            <li><strong>Base Telephone Number:</strong> {vehicleData.base_telephone_number}</li>\n                            <li><strong>Base Address:</strong> {vehicleData.base_address}</li>\n                            <li><strong>Reason:</strong> {vehicleData.reason}</li>\n                            <li><strong>Last Date Updated:</strong> {vehicleData.last_date_updated}</li>\n                            <li><strong>Last Time Updated:</strong> {vehicleData.last_time_updated}</li>\n                        </ul>\n                    </Card.Body>\n                </Card>\n            )}\n        </div>\n    );\n};\n\nexport default VehicleInfo;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport React from 'react';\nimport { Container,Image } from 'react-bootstrap';\nimport Home from './component/Home';\nimport { Route,Routes } from 'react-router-dom';\nimport DriverInfo from './component/DriverInfo';\nimport nycLogo from './component/photo/nyc_taxi.png';\nimport VehicleInfo from './component/VehicleInfo';\n\nfunction App() {\n  return (\n    <div style={{\n      display: 'flex',\n      flexDirection: 'column',\n      minHeight: '100vh'\n    }}>\n      <Container fluid className=\"p-5\" style={{ flex: 1 }}>\n\n        <Routes>\n\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/driver-info/:licenseNumber\" element={<DriverInfo />} />\n          <Route path=\"/vehicle-status/:plateNumber\" element={<VehicleInfo />} />\n        </Routes>\n      </Container>\n\n      <footer className=\"text-center p-3\" style={{ backgroundColor: '#f8f9fa',width: '100%' }}>\n        <Image\n          src={nycLogo}\n          alt=\"NYC Taxi and Limousine Commission Logo\"\n          fluid\n          style={{ maxHeight: '100px' }}\n        />\n        <p className=\"mt-2\">&copy; {new Date().getFullYear()} NYC Taxi and Limousine Commission. All Rights Reserved.</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom'; \nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n     <Router>  {/* Wrap App with BrowserRouter */}\n      <App />\n    </Router>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}